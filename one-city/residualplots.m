% Generating scatter plots of the residuals 
% Run this code after running usanalysistime.m. We need the LHS matrix
% generated and stored from that code.

% reading the stored LHS matrix generated by modelstore.m
matLHS = csvread('LHSmatrix.csv');

% reading the stored output matrices
matOW = csvread('WOutput.csv');
matOD = csvread('DOutput.csv');

% rank-transform the LHS matrix
[LHSr,LHSc] = size(matLHS);
matLHSrank = zeros(LHSr,LHSc);
for ind = 1:LHSc
    matLHSrank(:,ind) = tiedrank(matLHS(:,ind));
end

% rank-transform the output matrices
[matOr,matOc] = size(matOW);
matOWrank = zeros(matOr,matOc); matODrank = zeros(matOr,matOc);
for ind = 1:matOc
    matOWrank(:,ind) = tiedrank(matOW(:,ind));
    matODrank(:,ind) = tiedrank(matOD(:,ind));
end

% input labels [beta r delta kappa gamma alpha]
labelx = ["\beta","r","\delta","\kappa","\gamma","\alpha"];

for indx = 1:LHSc
    % matrix where we store the residuals
    matWRes = zeros(matOr,matOc+1); matDRes = zeros(matOr,matOc+1);

    % prepare matrices for multiple linear regression
    Xtemp = [matLHSrank(:,1:indx-1) matLHSrank(:,indx+1:end)];
    Xind = matLHSrank(:,indx);

    % for computing the model values
    Xnew = [ones(LHSr,1) Xtemp];
    
    % multiple linear regression
    mdlx = fitlm(Xtemp,Xind);
    % compute the residual in Xind
    coeffs = table2array(mdlx.Coefficients);
    yhat = Xnew*coeffs(:,1);
    Xres = Xind - yhat;
    matWRes(:,1) = Xres; matDRes(:,1) = Xres;
    
    for indy = 1:matOc
        YWind = matOWrank(:,indy); YDind = matODrank(:,indy);
        mdlyw = fitlm(Xtemp,YWind); mdlyd = fitlm(Xtemp,YDind);
        % compute the residual in YWind and YDind
        coeffsw = table2array(mdlyw.Coefficients);
        coeffsd = table2array(mdlyd.Coefficients);
        ywhat = Xnew*coeffsw(:,1); ydhat = Xnew*coeffsd(:,1);
        YWres = YWind - ywhat; YDres = YDind - ydhat;
        pW = polyfit(Xres,YWres,1); fW = polyval(pW,Xres);
        pD = polyfit(Xres,YDres,1); fD = polyval(pD,Xres);
        matWRes(:,indy+1) = YWres; matDRes(:,indy+1) = YDres;

        % generate scatter plots every week
        if indx == 3
        % change this value to the index number of the variable
            % Compute the day
            day = 7*indy;

            figure
            hold on
            scatter(Xres,YWres)
            plot(Xres,fW)
            xlim([-400 400])
            ylim([-500 400])
            title('W vs ' + labelx(indx) + ': Day ' + day)
            xlabel(labelx(indx))
            ylabel('W')
            hold off
            
            figure
            hold on
            scatter(Xres,YDres)
            plot(Xres,fD)
            xlim([-400 400])
            ylim([-500 400])
            title('D vs ' + labelx(indx) + ': Day ' + day)
            xlabel(labelx(indx))
            ylabel('D')
            hold off
        end
    end
end